<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home on DSkrzypiec Blog</title>
    <link>https://dskrzypiec.dev/</link>
    <description>Recent content in Home on DSkrzypiec Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 30 Dec 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://dskrzypiec.dev/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Summary of 2023</title>
      <link>https://dskrzypiec.dev/year2023/</link>
      <pubDate>Sat, 30 Dec 2023 00:00:00 +0000</pubDate>
      
      <guid>https://dskrzypiec.dev/year2023/</guid>
      <description>Continuation of 2022 I would like to start by mentioning the things I continued doing in 2023, beginning with sports. I maintained my running routine, pursued table tennis training, and practiced fundamental calisthenics, including pull-ups, push-ups, and dips. However, I decided to discontinue my Russian language studies, mostly due to lack of time. As for my MacBook Air M1 from 2020, it&amp;rsquo;s still in pretty decent condition, even after nearly three years of heavy usage.</description>
    </item>
    
    <item>
      <title>New Scheduler</title>
      <link>https://dskrzypiec.dev/new-scheduler/</link>
      <pubDate>Sat, 23 Dec 2023 00:00:00 +0000</pubDate>
      
      <guid>https://dskrzypiec.dev/new-scheduler/</guid>
      <description>Intro I&amp;rsquo;ve started implementing yet another DAG scheduler, something like Airflow or Luigi. This post is going to be on why I&amp;rsquo;m doing this and what I&amp;rsquo;m trying to achieve.
Before we start, let me do a short introduction to schedulers, in case you&amp;rsquo;ve never heard about it or use it yourself. What in here I&amp;rsquo;m calling scheduler is a program or software system which is responsible for scheduling execution of tasks or another programs in particular order.</description>
    </item>
    
    <item>
      <title>Getting method&#39;s source code in Go</title>
      <link>https://dskrzypiec.dev/go-ast/</link>
      <pubDate>Mon, 21 Aug 2023 00:00:00 +0000</pubDate>
      
      <guid>https://dskrzypiec.dev/go-ast/</guid>
      <description>Intro Recently I thought I want to have a function, implemented in Go, which would return method&amp;rsquo;s source code for given type and method name in the runtime. Something of this signature:
func MethodBodySource(typeName, methodName string) (*ast.BlockStmt, string, error) { ... } This function would return found function body AST (which in Go is block statement), it&amp;rsquo;s source code as string and possibly an error.
In dynamically typed and interpreted languages this is a foundation functionality.</description>
    </item>
    
    <item>
      <title>What&#39;s inside parquet file?</title>
      <link>https://dskrzypiec.dev/parquet/</link>
      <pubDate>Sun, 11 Jun 2023 00:00:00 +0000</pubDate>
      
      <guid>https://dskrzypiec.dev/parquet/</guid>
      <description>Intro Recently I&amp;rsquo;ve visited very interesting website which presents byte by byte what happens when website (data) is sent using TLS. One thing is to know roughly how TLS works and another one is to actually see with explanations what is really happening. Under its influence I thought that I&amp;rsquo;ve been working with parquet files for some time but I don&amp;rsquo;t really know their structure. I know its properties, how and when one should use it but I have never really experienced what parquet format really is.</description>
    </item>
    
    <item>
      <title>Polars - modern data frame library</title>
      <link>https://dskrzypiec.dev/polars/</link>
      <pubDate>Sat, 15 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>https://dskrzypiec.dev/polars/</guid>
      <description>Intro Almost five years passed since last time I&amp;rsquo;ve extensively used data frame library to calculate things. I sort of switched from analyzing data and building application around that to more &amp;ldquo;regular&amp;rdquo; programming and data engineering. I sometimes still use data.table in R or pandas in Python for ad-hoc analysis but nowadays I rarely need to do it. For completeness I should add that data frame library is a software library that support operations on data frames which are some kind of tables, usually kept in memory used for data analysis.</description>
    </item>
    
    <item>
      <title>Implicit is great util it isn&#39;t - AWS CDK example</title>
      <link>https://dskrzypiec.dev/aws-cdk-implicit/</link>
      <pubDate>Wed, 25 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://dskrzypiec.dev/aws-cdk-implicit/</guid>
      <description>Intro I&amp;rsquo;d like to start this post from praising AWS Cloud Development Kit (AWS CDK). In my opinion it&amp;rsquo;s great! It&amp;rsquo;s available in number of languages including Typescript, Go and Python. It has very good documentation including examples and most common use cases.
If you&amp;rsquo;re not familiar with AWS CDK, I&amp;rsquo;d say it&amp;rsquo;s a library (or set of libraries) defining every service and its objects (constructs) on AWS. It&amp;rsquo;s obviously used to define infrastructure-as-a-code but it has strong advantages on other template-based formats.</description>
    </item>
    
    <item>
      <title>Summary of 2022</title>
      <link>https://dskrzypiec.dev/year2022/</link>
      <pubDate>Fri, 30 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>https://dskrzypiec.dev/year2022/</guid>
      <description>Continuation of 2021 highlights As the first highlight of year 2022 I wanted to mention the continuation of most of habits that I&amp;rsquo;ve started in 2021. I&amp;rsquo;m still jog regularly. I tried to learn Russian somehow regularly over the year. I had some breaks but generally I learned a bit and didn&amp;rsquo;t forget what I&amp;rsquo;ve learned in 2021. I still do pull ups and chin ups on daily basis. I&amp;rsquo;ve run three (3km, 6km and 6km) Runmageddons in 2022!</description>
    </item>
    
    <item>
      <title>Home App v2 - rewritten in Go</title>
      <link>https://dskrzypiec.dev/home-app-go/</link>
      <pubDate>Sat, 26 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://dskrzypiec.dev/home-app-go/</guid>
      <description>Intro Two years ago I&amp;rsquo;ve introduced Home Database with corresponding Home App written in ASP.NET Core MVC (C#). The original idea was to have a database for keeping very personal documents and other data related to me, my home and my family. More about motivations can be found in the linked post about Home Database.
In case if you want to explore dev version of Home App before reading this post, you can visit</description>
    </item>
    
    <item>
      <title>Implementing SQLite parser in Scala</title>
      <link>https://dskrzypiec.dev/sqlite-parser/</link>
      <pubDate>Wed, 26 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://dskrzypiec.dev/sqlite-parser/</guid>
      <description>Intro About a year ago I&amp;rsquo;ve played a bit with parsing T-SQL. At the time I&amp;rsquo;ve used Microsoft library and ANTLR for generating lexer and parser based on predefined T-SQL grammar. Recently I&amp;rsquo;ve come back to this topic. I&amp;rsquo;ve implemented SQLite parser almost from scratch (without code generation).
&amp;hellip;, but why? In general I wanted to have a SQL parser in order to build some kind of static analyzer tool for SQL and databases.</description>
    </item>
    
    <item>
      <title>A year in Allegro Pay</title>
      <link>https://dskrzypiec.dev/allegropay/</link>
      <pubDate>Sat, 10 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://dskrzypiec.dev/allegropay/</guid>
      <description>Intro In August 2021 I left PwC and joined Allegro Pay in role of senior data engineer. Allegro Pay is a fintech sub company of the biggest e-commerce in central Europe - Allegro. I&amp;rsquo;ve worked there for a year and in this post I want to summarized my experiences.
Onboarding and first thoughts Onboarding process in Allegro took four (4) days! That was very smooth introduction without any hassle. There was presentations about company culture, history and so on.</description>
    </item>
    
    <item>
      <title>First thoughts on Scala</title>
      <link>https://dskrzypiec.dev/scala/</link>
      <pubDate>Fri, 24 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://dskrzypiec.dev/scala/</guid>
      <description>Intro This post is about my first thoughts on Scala programming language. There is a great chance that I&amp;rsquo;ll be using Scala in the upcoming months, so I&amp;rsquo;ve read Programming in Scala in the last couple of days. Besides reading a book I also watched a bunch presentations and tutorials on YouTube and write few simple programs as an exercise.
Scala is the most similar to F# from all programming languages I know.</description>
    </item>
    
    <item>
      <title>Copying data between distributed systems</title>
      <link>https://dskrzypiec.dev/copying-data/</link>
      <pubDate>Sun, 05 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://dskrzypiec.dev/copying-data/</guid>
      <description>Intro Transforming data from one form into another is the primary task of every programmer. For data engineers very common task is to move or copy data between two or more data sources with ETL or ELT processes. Usually implementation of those processes are very high level. Glueing few libraries into a script, or some operators into a DAG in Python. Although not always. There are more interesting cases. Recently I&amp;rsquo;ve had one and I wanted to write a bit about this particular problem and possible solutions.</description>
    </item>
    
    <item>
      <title>AWK - forgotten data engineering tool</title>
      <link>https://dskrzypiec.dev/awk/</link>
      <pubDate>Sun, 20 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://dskrzypiec.dev/awk/</guid>
      <description>Intro This post is dedicated to AWK. Despite the title AWK is not totally forgotten but still many data scientists and engineers have never heard of it. Since 1977 many things have changed in the data world, especially the scale, but in my opinion it&amp;rsquo;s still relevant and useful tool in 2022.
What is AWK AWK is a tiny, domain-specific language for text processing. It can be used via awk program which is usually available on UNIX-like systems out of the box.</description>
    </item>
    
    <item>
      <title>Summary of 2021</title>
      <link>https://dskrzypiec.dev/year2021/</link>
      <pubDate>Thu, 30 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://dskrzypiec.dev/year2021/</guid>
      <description>Started jogging In January, after a long pandemic home isolation I&amp;rsquo;ve started jogging. For my whole life I always hate jogging. I love most sports but running was something else. After almost a year in pandemic with gyms being closed and almost no going outside I though that I&amp;rsquo;ll give it a try.
At first two tries I couldn&amp;rsquo;t run 500 meters without a break for catching a breath. Unexpectedly body adaptation was very quick!</description>
    </item>
    
    <item>
      <title>Parsing T-SQL</title>
      <link>https://dskrzypiec.dev/parsing-tsql/</link>
      <pubDate>Sun, 14 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://dskrzypiec.dev/parsing-tsql/</guid>
      <description>Intro Once I&amp;rsquo;ve tried to implement auto formatter for T-SQL. To make this there seems to be two ways. The first and easier one is to implement sets of rules to transform text file without any context. The other one is to base on AST of T-SQL and use its context to apply formatting. The first case seems to be easier at the beginning and can be gradually extended but it&amp;rsquo;s really hard and dirty to include all of the cases without the knowledge of the context.</description>
    </item>
    
    <item>
      <title>Fuzzy Finder</title>
      <link>https://dskrzypiec.dev/fuzzy-finder/</link>
      <pubDate>Mon, 01 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://dskrzypiec.dev/fuzzy-finder/</guid>
      <description>Intro I&amp;rsquo;ll start by stating that I don&amp;rsquo;t like fuzziness. It&amp;rsquo;s the main reason I didn&amp;rsquo;t stick to machine learning and data science at the beginning of my career. Instead I&amp;rsquo;ve transitioned to programming and data engineering.
And here I am writing about fuzzy finder in Vim. That&amp;rsquo;s because of fzf.vim Vim package. It has some very convenient feature that I have been looking for. More on this later in the post.</description>
    </item>
    
    <item>
      <title>Foundations</title>
      <link>https://dskrzypiec.dev/foundations/</link>
      <pubDate>Tue, 26 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://dskrzypiec.dev/foundations/</guid>
      <description>Intro Foundations are important whatever you do. That was said by many. So why I&amp;rsquo;m writing about that? It&amp;rsquo;s because I&amp;rsquo;m worried about foundations situation in IT world.
Foundations are by definition important, because all things built in given space dependents on it. I&amp;rsquo;ll try to describe why that matters in examples of fields that I&amp;rsquo;m interested in.
I&amp;rsquo;ll say it at least twice - there is no shame to back to basics even on senior level of experience.</description>
    </item>
    
    <item>
      <title>Bloom filter</title>
      <link>https://dskrzypiec.dev/bloom-filter/</link>
      <pubDate>Fri, 08 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://dskrzypiec.dev/bloom-filter/</guid>
      <description>Intro At one of mine job interviews I was asked how would I check if there is a user name in continues stream of data without possibility of storing data on the disc. I had a good intuition but I didn&amp;rsquo;t expected that probabilistic answer would be sufficient and I haven&amp;rsquo;t ever heard about Bloom filters to that point.
Bloom filter is a data structure. It exists to help answer the question &amp;ldquo;Does this element (probably) exist in the set?</description>
    </item>
    
    <item>
      <title>Leaving PwC</title>
      <link>https://dskrzypiec.dev/leaving-pwc/</link>
      <pubDate>Sun, 01 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://dskrzypiec.dev/leaving-pwc/</guid>
      <description>Intro After six and a half (6.5) years I&amp;rsquo;m leaving PwC. In this post I wanted to shortly described my history in PwC and perhaps expose what it&amp;rsquo;s like to work in consulting.
All of the following are my recollections and my thoughts about working in PwC. On the publish date I&amp;rsquo;m no longer PwC employee. All opinions are my own and does not represent PwC in any way. Furthermore the following is very local focused.</description>
    </item>
    
    <item>
      <title>Home Server</title>
      <link>https://dskrzypiec.dev/home-server/</link>
      <pubDate>Sun, 06 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://dskrzypiec.dev/home-server/</guid>
      <description>Intro I&amp;rsquo;ve finally setup my own server. It&amp;rsquo;s great and I regret I haven&amp;rsquo;t done it earlier. This post will be about my thoughts and experiences on setting up a home server.
In my case a server is just a Raspberry Pi 4B so it&amp;rsquo;s not a typical server with over 40 CPU cores and over 256 GB of RAM but technically it&amp;rsquo;s still a server and it&amp;rsquo;s enough for my use.</description>
    </item>
    
    <item>
      <title>Vim sessions</title>
      <link>https://dskrzypiec.dev/vimsessions/</link>
      <pubDate>Tue, 27 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://dskrzypiec.dev/vimsessions/</guid>
      <description>Intro I wanted to share with you my experience with Vim sessions. The concept and usage are really simple but I didn&amp;rsquo;t know about it for a long time using Vim. In a nutshell you can save current state of your Vim environment as a session. Once it&amp;rsquo;s saved it can be reopened.
Have you ever been debugging (not necessarily in Vim) for few hours with bunch of files opened in particular order to wrap your head around the problem?</description>
    </item>
    
    <item>
      <title>Iterators in C#</title>
      <link>https://dskrzypiec.dev/iterators/</link>
      <pubDate>Thu, 22 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://dskrzypiec.dev/iterators/</guid>
      <description>Intro Main goal of this post is to present how iterators actually works in C#. In particular we will take a look on IL (Intermediate Language) generated by the compiler to check out what is really going on.
But first let&amp;rsquo;s start from loosely stated definition of iterators in C#. An iterator is a method or property which returns IEnumerable&amp;lt;T&amp;gt; or IEnumerator&amp;lt;T&amp;gt; and uses yield return or yield break contextual keywords.</description>
    </item>
    
    <item>
      <title>Summary of 2020</title>
      <link>https://dskrzypiec.dev/year2020/</link>
      <pubDate>Wed, 30 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://dskrzypiec.dev/year2020/</guid>
      <description>Intro Starting from this year on I&amp;rsquo;ll try to make a post per year with summary of my personal and professional important events within the year.
2020 highlights  Finished application for a factoring company SARS-CoV-2 Changed team and position at work I&amp;rsquo;ve started learning Russian I&amp;rsquo;ve build a PC Całka died My daughter was born  Finished application for a factoring company In April 2020 I&amp;rsquo;ve finished working on the project for a factoring company.</description>
    </item>
    
    <item>
      <title>Home Database</title>
      <link>https://dskrzypiec.dev/home-db/</link>
      <pubDate>Wed, 11 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://dskrzypiec.dev/home-db/</guid>
      <description>Intro Last month after my daughter was born we&amp;rsquo;ve received a bunch of documents in this matter. Birth certificate, medical papers, assignment of PESEL, etc. When I was about to put those papers into document folders I thought it&amp;rsquo;s time for digitalization.
Most of our very important documents like mortgage papers or university diplomas exist only in physical version without any copy either digital or physical. We had plans to scan or at least make photos of those but we didn&amp;rsquo;t do it.</description>
    </item>
    
    <item>
      <title>Goodbye Całka</title>
      <link>https://dskrzypiec.dev/calka/</link>
      <pubDate>Sun, 25 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://dskrzypiec.dev/calka/</guid>
      <description>Intro Last Saturday, 17th October 2020, Całka (one of my two cats) had to be put to sleep. Name Całka translates from Polish to English as Integral. I and my (at that time) girlfriend were maths undergrads when we&amp;rsquo;ve taken Całka from an animal shelter in early 2016. That probably explains the name.
For the last two months, Całka fought with really nasty jaw bone cancer. It was growing fast. It was too big to even consider surgery.</description>
    </item>
    
    <item>
      <title>Mocking a file system in Go</title>
      <link>https://dskrzypiec.dev/mock-go-filesystem/</link>
      <pubDate>Sat, 03 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://dskrzypiec.dev/mock-go-filesystem/</guid>
      <description>src  config  config.go config_test.go reloader.go   dir  dir.go dir_test.go dirCompare.go dirCompare_test.go hash.go listener.go   loop  mainLoop.go   main.go   readme.md   Intro In this post we&amp;rsquo;ll try to mock some features of a file system in Go. We&amp;rsquo;ll focus mainly on file tree structure instead on IO operations on files itself. If you are interested in full abstract file system for Go check out afero package.</description>
    </item>
    
    <item>
      <title>Building a small form factor PC</title>
      <link>https://dskrzypiec.dev/minipc/</link>
      <pubDate>Fri, 25 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://dskrzypiec.dev/minipc/</guid>
      <description>Intro At the beginning I want to say, thank you, to Tymek for introducing me into SFF and general building a PC area. He also gave me a lot of tips and advices which surely saved me many hours of reading hardware specs.
For last ten years I&amp;rsquo;ve been using laptops as my main interface for programming and browsing Internet. Reason for that was me being a student for whom battery life and device&amp;rsquo;s weight was more important than better specs.</description>
    </item>
    
    <item>
      <title>Writing a blog on smartphone</title>
      <link>https://dskrzypiec.dev/smartphone/</link>
      <pubDate>Mon, 24 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://dskrzypiec.dev/smartphone/</guid>
      <description>Intro Nowadays smartphones are basically a pocket computers. Smartphone hardware evolution is very rapid. I was in a situation where my middle-tier phone was better than my current laptop. Could smartphone be used for programming in that case? The answer is yes but is it actual feasible? In this post we&amp;rsquo;ll focus on implementing a blog on a Android smartphone.
I&amp;rsquo;ve been using my smartphone to play with C++, Go, Vim and practice UNIX programs like AWK and grep for quite some time now.</description>
    </item>
    
    <item>
      <title>I&#39;m quitting cmd</title>
      <link>https://dskrzypiec.dev/quittingcmd/</link>
      <pubDate>Wed, 05 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://dskrzypiec.dev/quittingcmd/</guid>
      <description>Background Regarding operating systems I prefer Linux over Windows. Even though in my job I&#39;m forced to use Windows. To make my work on Windows more pleasant I&#39;ve been using Command-line alongside with vim, grep, AWK and other Unix/Linux tools.
Using cmd before Windows 10 was not a very visual appealing experience. It suppose to be just a rectangle box with a text and somehow they made it hard to read and write text.</description>
    </item>
    
    <item>
      <title>Vim Movement Challenge</title>
      <link>https://dskrzypiec.dev/vimmovchallenge/</link>
      <pubDate>Fri, 11 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://dskrzypiec.dev/vimmovchallenge/</guid>
      <description>I&#39;ve been using Vim for about 3 years now and I feel very comfortable using it. But recently I&#39;ve got feeling that for a long time I didn&#39;t make any progress regarding my movement in Vim. In those years w\W, b\B, e\E, t, f, /, ?, $, ^, 0, } and G were my best friends for making fast and precise moves in normal mode. Don&#39;t get me wrong. With those I&#39;m happy and still can finish editing much more quicker than in standard text editor.</description>
    </item>
    
    <item>
      <title>My favorite tech talks</title>
      <link>https://dskrzypiec.dev/favtechtalks/</link>
      <pubDate>Sat, 05 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://dskrzypiec.dev/favtechtalks/</guid>
      <description>Intro I want to share with you a list of my favorite tech talks. I can honestly say this is my hobby. Watching tech talks on YouTube. Here I&#39;ve prepared list of eleven my most liked presentations. For each of them I try to describe why those are special to me and why their are worth watching. Order of titles is not particularly important.
I wanted to keep this list pretty short (around 10) therefore it&#39;s not complete.</description>
    </item>
    
    <item>
      <title>Go database/sql vs jmoiron/sqlx reading benchmark</title>
      <link>https://dskrzypiec.dev/gosqlstdsqlx/</link>
      <pubDate>Thu, 05 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://dskrzypiec.dev/gosqlstdsqlx/</guid>
      <description>Intro While building most of projects or apps it is very common to read from a database. In go standard way to do that is by using database/sql standard library. To illustrate how it can be done let&#39;s load from database a bunch of Points which are slice of Points defined as follows
 type Point struct { X int Y float64 } type Points []Point  Next listening contains definition of function ReadPoints which for existing *sql.</description>
    </item>
    
    <item>
      <title>What the quantile really is?</title>
      <link>https://dskrzypiec.dev/quantiles/</link>
      <pubDate>Fri, 23 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://dskrzypiec.dev/quantiles/</guid>
      <description>Intro For few years when I was practicing data science I&#39;ve used quantiles a lot. I knew what it is and when one should use it. I knew mathematical definition and intuition around quantiles but if someone would ask me to implement it from scratch I wouldn&#39;t know how to do it right away.
So what is a quantile? It&#39;s a one of most commonly used descriptive statistic. It gives us aggregated information about sample&#39;s distribution.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://dskrzypiec.dev/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://dskrzypiec.dev/about/</guid>
      <description>About this blog Hi! I&amp;rsquo;m Damian Skrzypiec and this is my blog. I write mostly about mathematics and programming in general.
About me I live in Warsaw, Poland. I&amp;rsquo;m math graduate but my main interest is programming and computer science. I do like statically typed and compiled programming languages and data engineering. I have experience in C#, Go and Scala. I like C++ a lot but unfortunately I didn&amp;rsquo;t work with it professionally.</description>
    </item>
    
  </channel>
</rss>

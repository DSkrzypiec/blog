<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Data engineering on DSkrzypiec Blog</title>
    <link>https://dskrzypiec.dev/tags/data-engineering/</link>
    <description>Recent content in Data engineering on DSkrzypiec Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 29 Apr 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://dskrzypiec.dev/tags/data-engineering/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Implementing cron</title>
      <link>https://dskrzypiec.dev/cron/</link>
      <pubDate>Mon, 29 Apr 2024 00:00:00 +0000</pubDate>
      
      <guid>https://dskrzypiec.dev/cron/</guid>
      <description>Intro Recently, I have been documenting ppacer schedules and in that moment I thought I should have probably implemented cron schedule for ppacer. Before I explain why, let&amp;rsquo;s take one step back to give you a bit of context about ppacer schedules. Schedules in ppacer are covered by generic and simple interface
type Schedule interface { Start() time.Time Next(current time.Time, prevSched *time.Time) time.Time String() string } Initially I&amp;rsquo;ve provided the simplest possible regular schedule which satisfies that interface - schedule.</description>
    </item>
    
    <item>
      <title>Copying data between distributed systems</title>
      <link>https://dskrzypiec.dev/copying-data/</link>
      <pubDate>Sun, 05 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://dskrzypiec.dev/copying-data/</guid>
      <description>Intro Transforming data from one form into another is the primary task of every programmer. For data engineers very common task is to move or copy data between two or more data sources with ETL or ELT processes. Usually implementation of those processes are very high level. Glueing few libraries into a script, or some operators into a DAG in Python. Although not always. There are more interesting cases. Recently I&amp;rsquo;ve had one and I wanted to write a bit about this particular problem and possible solutions.</description>
    </item>
    
    <item>
      <title>AWK - forgotten data engineering tool</title>
      <link>https://dskrzypiec.dev/awk/</link>
      <pubDate>Sun, 20 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://dskrzypiec.dev/awk/</guid>
      <description>Intro This post is dedicated to AWK. Despite the title AWK is not totally forgotten but still many data scientists and engineers have never heard of it. Since 1977 many things have changed in the data world, especially the scale, but in my opinion it&amp;rsquo;s still relevant and useful tool in 2022.
What is AWK AWK is a tiny, domain-specific language for text processing. It can be used via awk program which is usually available on UNIX-like systems out of the box.</description>
    </item>
    
  </channel>
</rss>

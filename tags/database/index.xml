<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>database on DSkrzypiec Blog</title>
    <link>https://dskrzypiec.dev/tags/database/</link>
    <description>Recent content in database on DSkrzypiec Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 11 Nov 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://dskrzypiec.dev/tags/database/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Home Database</title>
      <link>https://dskrzypiec.dev/home-db/</link>
      <pubDate>Wed, 11 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://dskrzypiec.dev/home-db/</guid>
      <description>Intro Last month after my daughter was born we&amp;rsquo;ve received a bunch of documents in this matter. Birth certificate, medical papers, assignment of PESEL, etc. When I was about to put those papers into document folders I thought it&amp;rsquo;s time for digitalization.
Most of our very important documents like mortgage papers or university diplomas exist only in physical version without any copy either digital or physical. We had plans to scan or at least make photos of those but we didn&amp;rsquo;t do it.</description>
    </item>
    
    <item>
      <title>Go database/sql vs jmoiron/sqlx reading benchmark</title>
      <link>https://dskrzypiec.dev/gosqlstdsqlx/</link>
      <pubDate>Thu, 05 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://dskrzypiec.dev/gosqlstdsqlx/</guid>
      <description>Intro While building most of projects or apps it is very common to read from a database. In go standard way to do that is by using database/sql standard library. To illustrate how it can be done let&#39;s load from database a bunch of Points which are slice of Points defined as follows
 type Point struct { X int Y float64 } type Points []Point  Next listening contains definition of function ReadPoints which for existing *sql.</description>
    </item>
    
  </channel>
</rss>
